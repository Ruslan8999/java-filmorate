-- удаление всех таблиц в БД
DROP TABLE IF EXISTS likes  ;
DROP TABLE IF EXISTS friends ;
DROP TABLE IF EXISTS genre_film;
DROP TABLE IF EXISTS users ;
DROP TABLE IF EXISTS friends ;
DROP TABLE IF EXISTS genres_films;
DROP TABLE IF EXISTS films_genres;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS mpa;

-- создание таблиц в БД
CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR
);
CREATE UNIQUE INDEX IF NOT EXISTS MPA_MPA_ID_UINDEX
    ON MPA (MPA_ID);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR(255),
    DESCRIPTION  VARCHAR(255),
    RELEASE_DATE DATE,
    DURATION     VARCHAR(10),
    MPA_ID      INT,
    CONSTRAINT FK_MPA FOREIGN KEY (MPA_ID) REFERENCES MPA (MPA_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS FILMS_FILM_ID_UINDEX
    ON FILMS (FILM_ID);

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR(30) NOT NULL,
    LOGIN    VARCHAR(30) NOT NULL,
    NAME     VARCHAR(30),
    BIRTHDAY DATE
);
CREATE UNIQUE INDEX IF NOT EXISTS USERS_USER_ID_UINDEX
    ON USERS (USER_ID);

CREATE TABLE IF NOT EXISTS LIKES
(
    USER_ID BIGINT,
    FILM_ID BIGINT,
    CONSTRAINT LIKES_PK PRIMARY KEY (USER_ID, FILM_ID),
    CONSTRAINT FK_FILMS FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    NAME     VARCHAR(50)                          NOT NULL
);
CREATE UNIQUE INDEX IF NOT EXISTS GENRE_GENRE_ID_UINDEX
    ON GENRES (GENRE_ID);

CREATE TABLE IF NOT EXISTS FILMS_GENRES
(
    FILM_ID  BIGINT NOT NULL,
    GENRE_ID INT    NOT NULL,
    CONSTRAINT FILMS_GENRES_PK PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT FILMS_GENRES_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE ,
    CONSTRAINT FILMS_GENRES_FK_2 FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    FRIEND_ID BIGINT NOT NULL,
    USER_ID   BIGINT NOT NULL,
    CONSTRAINT PK_FRIENDS PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT FK_FRIENDS1 FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_FRIENDS2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
